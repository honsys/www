#
# from https://www.exratione.com/2012/12/websockets-over-ssl-haproxy-nodejs-nginx
# and http://stackoverflow.com/questions/13227544/haproxy-redirecting-http-to-https-ssl
# and http://nbevans.wordpress.com/2011/03/03/cultural-learnings-of-ha-proxy-for-make-benefit
# and http://comments.gmane.org/gmane.comp.web.haproxy/5888
# perhaps use this joiner: https://github.com/joewilliams/haproxy_join
#
userlist honsys
  group usr
  user admin insecure-password honsys groups usr
  user david insecure-password golddog groups usr
  user hon insecure-password golddog groups usr

# redirect public http to secured -- iptables nat set to redirect 80 to 9080 and 443 to 9443
#
frontend public
  mode http
# mode tcp  
  bind :9080
# Redirect all HTTP traffic to HTTPS
  redirect scheme https if !{ ssl_fc }
 
# HTTPS -- note cacert key first item in this file, followed by private key...
# haproxy is ok with this but not the reverse.
  bind :9443 ssl crt honsys.comGeoTrustCAcertificate_and_PrivateKey.pem

# authenticate usr in frontend
# acl auth_usr http_auth_group(honsys) usr
# http-request auth realm usr if !auth_usr

# haproxy stats & admin page also setup for ssl honsys cacert
  acl use_stats hdr_end(host) -i stats.honsys.com
  acl use_stats hdr_end(host) -i stats.honsys.net
  acl use_stats hdr_end(host) -i stats.eviz.biz
  use_backend stats if use_stats

# in principle there's no need to call-out tomcat webapps when it's default backend
# acl use_tomcat80 hdr_end(host) -i scm.honsys.com
# acl use_tomcat80 hdr_end(host) -i solr.honsys.com
# acl use_tomcat80 hdr_end(host) -i redmjne.org
# use_backend tomcat80 if use_tomcat80
# all services provided by various wars (scm-manager, solr, redmjne, hudson, etc.) 
# are webapps in the default backen tomcat (8080)
  default_backend tomcat80

# release candidate services (tomcat jee webapps) should use subdomain rc.whatever
  acl use_tomcat88 hdr_end(host) -i rc.redmjne.org
  use_backend tomcat88 if use_tomcat88

# send invest & finance traffic to same page (for now)
  acl investdomain path_beg /invest
  acl investdomain hdr_end(host) -i invest.eviz.biz
  acl investdomain hdr_end(host) -i finance.eviz.biz
  acl investdomain hdr_end(host) -i invest.honsys.com
  acl investdomain hdr_end(host) -i finance.honsys.com
  acl investdomain hdr_end(host) -i invest.honsys.net
  acl investdomain hdr_end(host) -i invest.honsys.net
  redirect location http://honsys.com/~hon/invest/modiv if investdomain

  acl investdomain hdr_end(host) -i finance.honsys.com
  acl investdomain hdr_end(host) -i invest.honsys.net
  acl investdomain hdr_end(host) -i invest.honsys.net
  redirect location http://honsys.com/~hon/invest/modiv if investdomain

# all the above are tomcat jee webapps ... below are individual nodejs servers ...

# epad == nodejs etherpad-lite instance
# etherpad-lite settings.json edited for ssl honsys cacert
  acl use_epad hdr_end(host) -i epad.honsys.com
  acl use_epad hdr_end(host) -i epad.honsys.net
  acl use_epad hdr_end(host) -i epad.eviz.biz
  use_backend etherpad if use_epad

# nide == another nodejs app: 
# acl use_nide hdr_end(host) -i nide.honsys.com
# acl use_nide hdr_end(host) -i nide.honsys.net
# acl use_nide hdr_end(host) -i nide.eviz.biz
# use_backend node_ide if use_nide

# cloud9 == another nodejs app: 
  acl use_cloud9 hdr_end(host) -i cloud9.honsys.com
  acl use_cloud9 hdr_end(host) -i cloud9.honsys.net
  acl use_cloud9 hdr_end(host) -i cloud9.eviz.biz
  use_backend cloud9 if use_cloud9

# cesium == another nodejs app: 
  acl use_cesium hdr_end(host) -i earthlimb.net
  acl use_cesium hdr_end(host) -i sci.eviz.biz
  use_backend cesium if use_cesium

